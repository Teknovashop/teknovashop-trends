import fs from 'fs';import path from 'path';import Parser from 'rss-parser';import { slugify, affAmazonSearch, affAliExpressSearch, affSheinSearch, imagePrompt } from './utils.mjs';
const ROOT=process.cwd();const niches=JSON.parse(fs.readFileSync(path.join(ROOT,'data','niches.json'),'utf-8'));const AMAZON_TAG_ES=process.env.AMAZON_TAG_ES||'teknovashop-21';const cfAccount=process.env.CF_ACCOUNT_ID;const cfToken=process.env.CF_API_TOKEN;const today=new Date();const y=today.getFullYear();const m=String(today.getMonth()+1).padStart(2,'0');const d=String(today.getDate()).padStart(2,'0');const outDir=path.join(ROOT,'src','content','trends',String(y),m,d);fs.mkdirSync(outDir,{recursive:true});const publicDir=path.join(ROOT,'public','trends');fs.mkdirSync(publicDir,{recursive:true});
async function cfRun(model,payload){const url=`https://api.cloudflare.com/client/v4/accounts/${cfAccount}/ai/run/${encodeURIComponent(model)}`;const res=await fetch(url,{method:'POST',headers:{'Authorization':`Bearer ${cfToken}`,'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!res.ok) throw new Error(`Workers AI ${res.status}`);return await res.json();}
async function genReview(title){const system=`Eres un redactor de commerce en español (ES). Escribe una mini‑review de 60–90 palabras con pros/cons puntuales y una recomendación breve. No inventes specs.`;const prompt=`${system}\nProducto: ${title}`;if(!cfAccount||!cfToken){return `**Resumen**: Producto en tendencia. Ideal para quienes buscan buena relación calidad/precio.\n\n**Pros**: útil, fácil de usar. **Contras**: puede haber alternativas mejores según el caso.\n\n**Recomendación**: comparar precios y reseñas antes de comprar.`;}try{const out=await cfRun('@cf/meta/llama-3.1-8b-instruct',{prompt});return out?.result?.response?.trim()||'';}catch(e){return `**Resumen**: Producto en tendencia.\n\n**Pros/Contras**: equilibrio general. **Recomendación**: revisar opiniones antes de decidir.`;}}
async function genImage(title,slug){if(!cfAccount||!cfToken) return '/placeholder.jpg';try{const out=await cfRun('@cf/stabilityai/stable-diffusion-xl-base-1.0',{prompt:imagePrompt(title),num_steps:20,width:1024,height:576});const b64=out?.result?.image;if(!b64) return '/placeholder.jpg';const file=path.join(publicDir,`${slug}.png`);fs.writeFileSync(file,Buffer.from(b64,'base64'));return `/trends/${slug}.png`;}catch(e){return '/placeholder.jpg';}}
async function fetchRedditTitles(sub){const parser=new Parser({headers:{'User-Agent':'TeknovashopTrendsBot/1.0 (contact: trends@teknovashop.com)'}});const url=`https://www.reddit.com/r/${sub}/top/.rss?t=day`;try{const feed=await parser.parseURL(url);return (feed.items||[]).map(it=>it.title).slice(0,20);}catch(e){return [];}}
async function collectCandidates(){const out={};for(const [niche,cfg] of Object.entries(niches)){const titles=[];for(const sub of cfg.subreddits){const t=await fetchRedditTitles(sub);titles.push(...t);}const cleaned=titles.map(t=>t.replace(/\[.*?\]|\(.*?\)|\b\d{2,}%\b|\b[\d,.]+\s?(%|eur|€|usd|\$)/gi,'').trim());const freq={};cleaned.forEach(t=>{if(t.length<10) return;const key=t.toLowerCase();freq[key]=(freq[key]||0)+1;});const sorted=Object.entries(freq).sort((a,b)=>b[1]-a[1]).slice(0,20);out[niche]=sorted.map(([title,count])=>({title,count}));}return out;}
function buildLinks(q){return[{label:'Amazon (ES)',url:affAmazonSearch(q,AMAZON_TAG_ES)},{label:'AliExpress',url:affAliExpressSearch(q)},{label:'SHEIN',url:affSheinSearch(q)}];}
async function main(){const candidates=await collectCandidates();const items=[];for(const [niche,arr] of Object.entries(candidates)){for(const {title,count} of arr.slice(0,5)){const slug=slugify(title).slice(0,80);const review=await genReview(title);const hero=await genImage(title,slug);const fm=['---',`title: "${title.replace(/"/g,'\"')}"`,`slug: "${slug}"`,`date: "${new Date().toISOString()}"`,`niche: "${niche}"`,`score: ${count}`,`hero: "${hero}"`,'---'].join('\n');const links=buildLinks(title).map(l=>`- [${l.label}](${l.url})`).join('\n');const md=`${fm}\n${review}\n\n## Dónde comprar\n${links}\n`;const file=path.join(outDir,`${slug}.md`);fs.writeFileSync(file,md,'utf-8');items.push({niche,title,slug,hero,score:count});}}fs.writeFileSync(path.join(outDir,'index.json'),JSON.stringify({date:`${y}-${m}-${d}`,items},null,2));console.log('✅ Trends generated for',`${y}-${m}-${d}`);}
main();