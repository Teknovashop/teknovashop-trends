---
// src/pages/producto/[slug].astro
import Base from '../../layouts/Base.astro';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Carga TODOS los items del FS (utilidad reutilizable)
function loadAllItems(): Array<{
  slug: string;
  title: string;
  niche?: string;
  score?: number;
  hero?: string;
  links?: { label: string; url: string }[];
}> {
  const dataRoot = fileURLToPath(new URL('../../data/trends/', import.meta.url));
  if (!fs.existsSync(dataRoot)) return [];

  const items: any[] = [];
  const years = fs.readdirSync(dataRoot).filter((d) => /^\d{4}$/.test(d));

  for (const Y of years) {
    const yDir = path.join(dataRoot, Y);
    if (!fs.statSync(yDir).isDirectory()) continue;
    const months = fs.readdirSync(yDir).filter((d) => /^\d{2}$/.test(d));
    for (const M of months) {
      const mDir = path.join(yDir, M);
      if (!fs.statSync(mDir).isDirectory()) continue;
      const days = fs.readdirSync(mDir).filter((d) => /^\d{2}$/.test(d));
      for (const D of days) {
        const idx = path.join(mDir, D, 'index.json');
        try {
          const raw = fs.readFileSync(idx, 'utf-8');
          const j = JSON.parse(raw);
          if (j && Array.isArray(j.items)) items.push(...j.items);
        } catch {}
      }
    }
  }

  // De-duplicar por slug (primer encuentro gana)
  const map = new Map<string, any>();
  for (const it of items) {
    if (it?.slug && !map.has(it.slug)) map.set(it.slug, it);
  }
  return Array.from(map.values());
}

// ✅ Toda la lógica dentro: no depende de símbolos externos
export async function getStaticPaths() {
  // (re-escribe aquí el algoritmo para evitar “not defined”)
  const dataRoot = fileURLToPath(new URL('../../data/trends/', import.meta.url));
  let items: any[] = [];

  if (fs.existsSync(dataRoot)) {
    const years = fs.readdirSync(dataRoot).filter((d) => /^\d{4}$/.test(d));
    for (const Y of years) {
      const yDir = path.join(dataRoot, Y);
      if (!fs.statSync(yDir).isDirectory()) continue;
      const months = fs.readdirSync(yDir).filter((d) => /^\d{2}$/.test(d));
      for (const M of months) {
        const mDir = path.join(yDir, M);
        if (!fs.statSync(mDir).isDirectory()) continue;
        const days = fs.readdirSync(mDir).filter((d) => /^\d{2}$/.test(d));
        for (const D of days) {
          const idx = path.join(mDir, D, 'index.json');
          try {
            const raw = fs.readFileSync(idx, 'utf-8');
            const j = JSON.parse(raw);
            if (j && Array.isArray(j.items)) items.push(...j.items);
          } catch {}
        }
      }
    }
  }

  // De-duplicar por slug aquí también
  const map = new Map<string, any>();
  for (const it of items) {
    if (it?.slug && !map.has(it.slug)) map.set(it.slug, it);
  }
  const unique = Array.from(map.values());

  return unique.map((it) => ({ params: { slug: it.slug } }));
}

// Datos para el render
const all = loadAllItems();
const { slug } = Astro.params;
const post = all.find((it) => it.slug === slug);
---

<Base title={post ? `${post.title} — Teknovashop` : 'Producto — Teknovashop'}>
  {post ? (
    <>
      <h1>{post.title}</h1>

      <img
        src={post.hero || '/placeholder.jpg'}
        alt={post.title}
        class="hero"
        loading="lazy"
        decoding="async"
        onerror="this.src='/placeholder.jpg'"
      />

      <p class="meta">
        {post.niche && <span class="badge">{post.niche}</span>}
        {typeof post.score === 'number' && <span class="score">· score {post.score}</span>}
      </p>

      <section class="review">
        <p><strong>Resumen:</strong> tendencia del día.</p>
        <p><strong>Pros:</strong> buena relación calidad/precio.</p>
        <p><strong>Contras:</strong> depende del caso.</p>
        <p><strong>Recomendación:</strong> compara precios y opiniones antes de comprar.</p>
      </section>

      {Array.isArray(post.links) && post.links.length > 0 && (
        <section>
          <h2>Dónde comparar precios</h2>
          <ul>
            {post.links.map((l) => (
              <li><a href={l.url} target="_blank" rel="noopener noreferrer">{l.label}</a></li>
            ))}
          </ul>
        </section>
      )}
    </>
  ) : (
    <p>No se ha encontrado este producto.</p>
  )}

  <style>
    .hero{width:100%;max-width:900px;aspect-ratio:16/9;object-fit:cover;border-radius:12px;border:1px solid rgba(255,255,255,.1)}
    .meta{margin:.6rem 0 1rem;color:#9fb3b8}
    .badge{
      display:inline-block;background:rgba(0,196,199,.18);color:#93f7f9;
      padding:.18rem .5rem;border-radius:999px;margin-right:.5rem;
    }
    .review p{margin:.25rem 0}
  </style>
</Base>
