---
import Base from '../../layouts/Base.astro';

/* =========================
   1) Generar rutas estáticas
   ========================= */
export async function getStaticPaths() {
  // Carga ansiosa de todos los JSON bajo src/data/**/index.json
  const mods = import.meta.glob('../../data/**/index.json', { eager: true });

  // Aplana a items y guarda por slug (último gana)
  const bySlug = new Map();
  for (const k of Object.keys(mods)) {
    const mod = (mods as any)[k];
    const data = mod && typeof mod === 'object' && 'default' in mod ? mod.default : mod;
    if (!data || !Array.isArray(data.items)) continue;
    const dateStr = data.date || '';
    for (const it of data.items) {
      if (it && typeof it.slug === 'string') {
        const merged = { ...it, date: it.date || dateStr };
        bySlug.set(merged.slug, merged);
      }
    }
  }

  return Array.from(bySlug.keys()).map((slug) => ({ params: { slug } }));
}

/* =========================
   2) Cargar el producto actual
   ========================= */
const { slug } = Astro.params as { slug: string };

// Repetimos el aplanado (barato y robusto)
const _mods = import.meta.glob('../../data/**/index.json', { eager: true });
const _bySlug = new Map();
for (const k of Object.keys(_mods)) {
  const mod = (_mods as any)[k];
  const data = mod && typeof mod === 'object' && 'default' in mod ? mod.default : mod;
  if (!data || !Array.isArray(data.items)) continue;
  const dateStr = data.date || '';
  for (const it of data.items) {
    if (it && typeof it.slug === 'string') {
      const merged = { ...it, date: it.date || dateStr };
      _bySlug.set(merged.slug, merged);
    }
  }
}

const item = _bySlug.get(slug);
if (!item) {
  throw new Error(`Producto no encontrado: ${slug}`);
}

// Valores seguros para render
const title   = item.title || 'Producto';
const niche   = item.niche || '';
const score   = typeof item.score === 'number' ? item.score : null;
const dateStr = item.date || '';
const summary = item.summary || 'Tendencia destacada del día.';
const hero    = (typeof item.hero === 'string' && item.hero) ? item.hero : '/placeholder.jpg';

function toList(v: any) {
  if (Array.isArray(v)) return v;
  if (typeof v === 'string') return v.split('•').map(s => s.trim()).filter(Boolean);
  return [];
}
const pros = toList(item.pros);
const cons = toList(item.cons);

function safe(u?: string) {
  if (!u || typeof u !== 'string') return null;
  try { return new URL(u).toString(); } catch { return null; }
}
const amazonURL = safe(item?.links?.amazon);
const aliURL    = safe(item?.links?.aliexpress);
const sheinURL  = safe(item?.links?.shein);
---

<Base title={title} description={summary}>
  <article class="page">
    <header class="head">
      <h1 class="ttl">{title}</h1>
      <div class="meta">
        {niche && <span class="badge">{niche}</span>}
        {score !== null && <span class="muted">· score {score}</span>}
        {dateStr && <span class="muted">· {dateStr}</span>}
      </div>
    </header>

    <figure class="hero-wrap">
      <img class="hero" src={hero} alt={title} loading="lazy" decoding="async" />
    </figure>

    <section class="box">
      <p><b>Resumen:</b> {summary}</p>

      {(pros.length > 0 || cons.length > 0) && (
        <div class="cols">
          {pros.length > 0 && (
            <div>
              <h3>Pros</h3>
              <ul>
                {pros.map((p) => <li>{p}</li>)}
              </ul>
            </div>
          )}
          {cons.length > 0 && (
            <div>
              <h3>Contras</h3>
              <ul>
                {cons.map((c) => <li>{c}</li>)}
              </ul>
            </div>
          )}
        </div>
      )}

      {(amazonURL || aliURL || sheinURL) && (
        <div class="links">
          <h3>Dónde comparar precios</h3>
          <ul>
            {amazonURL && <li><a href={amazonURL} rel="nofollow noopener" target="_blank">Amazon (ES)</a></li>}
            {aliURL && <li><a href={aliURL} rel="nofollow noopener" target="_blank">AliExpress</a></li>}
            {sheinURL && <li><a href={sheinURL} rel="nofollow noopener" target="_blank">SHEIN</a></li>}
          </ul>
        </div>
      )}
    </section>
  </article>

  <style>
    .page { display:block; }
    .head { margin-bottom: .75rem; }
    .ttl { margin: 0 0 .25rem 0; font-size: clamp(1.35rem, 2.2vw + 1rem, 2rem); }
    .meta { display:flex; align-items:center; gap:.5rem; flex-wrap: wrap; }
    .badge { display:inline-block; padding:.18rem .55rem; border-radius:999px; background:rgba(0,196,199,.15); color:#93f7f9; font-size:.8rem; }
    .muted { color:#9fb3b8; font-size:.9rem; }

    .hero-wrap { margin: .75rem 0 1rem; }
    .hero {
      width:100%;
      max-height: 460px;
      object-fit: cover;
      border-radius: 16px;
      border: 1px solid rgba(255,255,255,.08);
      background: #0d1319;
      display:block;
    }

    .box { background: var(--card, #0f151b); border: 1px solid var(--muted, rgba(255,255,255,.08)); border-radius: 16px; padding: 1rem; }
    .cols { display:grid; grid-template-columns: repeat(auto-fit, minmax(220px,1fr)); gap:1rem; margin-top:.25rem; }
    h3 { margin:.25rem 0 .5rem; }
    .links ul { margin:.25rem 0 0; padding-left:1.1rem; }
    .links a { color: var(--brand, #00c4c7); text-decoration: none; }
    .links a:hover { text-decoration: underline; }
  </style>
</Base>
