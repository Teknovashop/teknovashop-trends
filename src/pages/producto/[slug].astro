---
import Base from "../../layouts/Base.astro";

/** 1) Generamos los paths estáticos para todos los slugs */
export function getStaticPaths() {
  // Cargamos TODO el contenido de /src/content/trends/**.md y devolvemos sus slugs
  const mods = import.meta.glob("/src/content/trends/**/*.md", { eager: true }) as Record<
    string,
    { frontmatter: { slug: string } }
  >;

  const paths = Object.values(mods)
    .map((m) => m?.frontmatter?.slug)
    .filter(Boolean)
    .map((slug) => ({ params: { slug } }));

  return paths;
}

/** 2) En la página, buscamos el post por slug y renderizamos */
type Entry = {
  frontmatter: {
    title: string;
    slug: string;
    date?: string;
    niche?: string;
    score?: number;
    hero?: string;
  };
  Content: unknown;
};

const params = Astro.params as { slug: string };

// Volvemos a globar de forma eager para obtener el contenido y el componente MD
const modules = import.meta.glob("/src/content/trends/**/*.md", { eager: true }) as Record<
  string,
  Entry
>;
const posts: Entry[] = Object.values(modules);
const post = posts.find((e) => e?.frontmatter?.slug === params.slug);

if (!post) {
  throw new Error(`No se encontró el producto con slug: ${params.slug}`);
}

const fm = post.frontmatter;
const Content = post.Content;
const hero = fm.hero && fm.hero !== "/placeholder.jpg" ? fm.hero : "/placeholder.jpg";
---

<Base title={`${fm.title} · Teknovashop`}>
  <article class="sheet">
    <header class="head">
      <h1>{fm.title}</h1>
      <p class="meta">
        {fm.niche && <span class="badge">{fm.niche}</span>}
        {fm.score != null && <span class="muted">· score {String(fm.score)}</span>}
        {fm.date && <span class="muted">· {fm.date.slice(0,10)}</span>}
      </p>
      <figure class="hero">
        <img src={hero} alt={fm.title} />
      </figure>
    </header>

    <section class="content">
      <Content />
    </section>
  </article>

  <style>
    .sheet{ display:block; }
    .head h1{ margin:0 0 .3rem; }
    .meta{ color:#a8bbc0; margin:.25rem 0 1rem; }
    .badge{
      display:inline-block; padding:.2rem .55rem; border-radius:999px;
      background: rgba(0,196,199,.18);
      border: 1px solid rgba(0,196,199,.35);
      color:#bffbff; font-weight:700; font-size:.78rem;
      margin-right:.4rem;
    }
    .muted{ opacity:.8; margin-left:.35rem; }

    .hero{
      margin: .75rem 0 1.25rem; background:#0d1319; border:1px solid var(--muted);
      border-radius:16px; overflow:hidden;
    }
    .hero img{
      width:100%; max-height: 460px; object-fit: cover; display:block;
    }

    .content{
      background: var(--card);
      border: 1px solid var(--muted);
      border-radius: 16px;
      padding: 1.1rem;
      box-shadow: 0 10px 30px rgba(0,0,0,.25);
    }
    .content :global(p){ margin:.6rem 0; }
    .content :global(ul){ margin:.4rem 0 .9rem 1.1rem; }
    .content :global(li){ margin:.25rem 0; }
    .content :global(strong){ color:#fff; }
    .content :global(a){ font-weight:700; }
  </style>
</Base>
