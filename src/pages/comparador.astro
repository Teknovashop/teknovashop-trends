---
import Base from "../layouts/Base.astro";
const title = "Comparador informativo";
const desc =
  "Pega el nombre o modelo de un producto. Mostramos precios y tiendas a partir de fuentes p√∫blicas (APIs). Este comparador no usa scraping agresivo y puede no listar todas las tiendas.";
---

<Base title={title} description={desc}>
  <section style="max-width:980px;margin:0 auto">
    <h1 style="margin:0 0 .4rem">Comparador informativo</h1>
    <p style="color:var(--ink-soft);margin:0 0 1rem">
      Pega el nombre o modelo de un producto. Mostramos precios y tiendas a partir de fuentes p√∫blicas (APIs).
      Este comparador no usa scraping agresivo y puede no listar todas las tiendas.
    </p>

    <div class="card">
      <label for="q"><b>Producto (texto)</b> <small style="color:var(--ink-soft)">marca + modelo</small></label>
      <input id="q" placeholder="Ej.: Philips 24E1N1100A, Samsung Galaxy Tab S9" />

      <label for="country"><b>Pa√≠s</b></label>
      <select id="country">
        <option value="ES" selected>Espa√±a (ES)</option>
        <option value="US">Estados Unidos (US)</option>
        <option value="FR">Francia (FR)</option>
        <option value="DE">Alemania (DE)</option>
        <option value="IT">Italia (IT)</option>
        <option value="GB">Reino Unido (GB)</option>
        <option value="MX">M√©xico (MX)</option>
      </select>

      <div class="actions">
        <button id="go" class="btn btn-primary">üîé Generar comparativa</button>
        <a id="view-json" class="btn btn-ghost" href="/api/compare?q=&country=ES" target="_blank" rel="noopener">Ver JSON</a>
      </div>

      <small style="color:var(--ink-soft)">
        Nota: algunas tiendas o marketplaces pueden no aparecer si no exponen API p√∫blica o hay l√≠mites regionales.
      </small>
    </div>

    <div id="msg" class="msg" aria-live="polite"></div>
    <div id="results" class="grid"></div>

    <h3 style="margin-top:1.5rem">Atajos de b√∫squeda</h3>
    <div class="links">
      <a id="gshop" target="_blank" rel="noopener">Google Shopping</a>
      <a id="idealo" target="_blank" rel="noopener">Idealo</a>
      <a id="pccomp" target="_blank" rel="noopener">PcComponentes</a>
    </div>
  </section>

  <style>
    .card{display:grid;gap:.6rem;padding:1rem;background:#fff;border:1px solid #e5e7eb;border-radius:12px;margin-bottom:1rem}
    input,select{padding:.6rem .75rem;border:1px solid #dfe3e8;border-radius:10px;background:#f8fafc}
    .actions{display:flex;gap:.6rem;flex-wrap:wrap}
    .btn{display:inline-flex;align-items:center;gap:.45rem;padding:.6rem .9rem;border-radius:10px;font-weight:800;text-decoration:none;border:1px solid #cfe3ea}
    .btn-primary{background:var(--brand);color:#003133;border-color:transparent}
    .btn-ghost{background:#eef6f9;color:#0b2a2d}
    .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:.9rem;margin:.8rem 0 2rem}
    .offer{border:1px solid #e5e7eb;background:#fff;border-radius:12px;padding:.9rem;display:grid;gap:.45rem}
    .offer .head{display:flex;gap:.5rem;align-items:center}
    .offer .head img{width:18px;height:18px;border-radius:4px}
    .offer .title{font-weight:700}
    .price{font-weight:900}
    .msg{margin-top:.6rem}
    .links{display:flex;gap:.7rem;flex-wrap:wrap;margin-top:.3rem}
    .links a{background:#eef6f9;border:1px solid #dbe9ee;border-radius:10px;padding:.4rem .6rem;color:#0c2a2d;text-decoration:none;font-weight:800}
  </style>

  <script is:raw>
    // Sanitiza comillas tipogr√°ficas y espacios raros
    function cleanQuery(raw) {
      if (!raw) return "";
      return raw
        .replace(/[‚Äú‚Äù¬´¬ª]/g, '"')
        .replace(/[‚Äò‚Äô]/g, "'")
        .replace(/\s+/g, " ")
        .replace(/^\s+|\s+$/g, "");
    }

    const $q = document.getElementById("q");
    const $country = document.getElementById("country");
    const $go = document.getElementById("go");
    const $json = document.getElementById("view-json");
    const $msg = document.getElementById("msg");
    const $grid = document.getElementById("results");
    const $gshop = document.getElementById("gshop");
    const $idealo = document.getElementById("idealo");
    const $pccomp = document.getElementById("pccomp");

    function updateExternalLinks() {
      const q = cleanQuery($q.value);
      const enc = encodeURIComponent(q || "");
      $gshop.href = `https://www.google.com/search?tbm=shop&q=${enc}`;
      $idealo.href = `https://www.idealo.es/precios?q=${enc}`;
      $pccomp.href = `https://www.pccomponentes.com/buscar/?query=${enc}`;
    }

    function updateJsonLink() {
      const q = cleanQuery($q.value);
      const country = $country.value || "ES";
      const url = `/api/compare?q=${encodeURIComponent(q)}&country=${encodeURIComponent(country)}&debug=1`;
      $json.href = url;
    }

    async function fetchCompare() {
      const raw = $q.value;
      const q = cleanQuery(raw);
      const country = $country.value || "ES";

      updateJsonLink();
      updateExternalLinks();

      if (!q) {
        $msg.textContent = "Introduce marca + modelo (p.ej. ‚ÄúPhilips 24E1N1100A‚Äù).";
        $grid.innerHTML = "";
        return;
      }

      $msg.textContent = "Buscando ofertas‚Ä¶";
      $grid.innerHTML = "";

      try {
        const url = `/api/compare?q=${encodeURIComponent(q)}&country=${encodeURIComponent(country)}`;
        const res = await fetch(url, { headers: { "Accept": "application/json" } });
        const data = await res.json();

        if (!res.ok) {
          $msg.textContent = data?.error || "Error en el servicio.";
          return;
        }

        if (!data?.offers?.length) {
          $msg.textContent = "Sin datos para esta consulta. Prueba a ser m√°s espec√≠fico (marca + modelo exacto).";
          return;
        }

        $msg.textContent = `${data.count} ofertas encontradas ¬∑ Fuentes: Google Shopping (${data?.sources?.google_shopping || 0}), Amazon (${data?.sources?.amazon || 0})`;

        // Render
        $grid.innerHTML = data.offers.map(o => {
          const dom = (()=>{
            try { return new URL(o.url).hostname.replace(/^www\./,""); } catch { return o.seller || o.source; }
          })();
          const price = Number(o.price);
          const priceText = Number.isFinite(price) ? new Intl.NumberFormat(undefined, { style: "currency", currency: o.currency || "EUR" }).format(price) : "";

          return `
            <article class="offer">
              <div class="head">
                ${o.logo ? `<img src="${o.logo}" alt="" />` : ""}
                <div><small>${o.seller || o.source} ‚Äî ${dom}</small></div>
              </div>
              <div class="title">${(o.title || "").replace(/</g,"&lt;")}</div>
              <div class="price">${priceText}</div>
              <a class="btn btn-ghost" href="${o.url}" target="_blank" rel="noopener">Ir a la tienda ‚Üí</a>
            </article>
          `;
        }).join("");

      } catch (e) {
        console.error(e);
        $msg.textContent = "Error de red o l√≠mite de API.";
      }
    }

    // Eventos
    $go.addEventListener("click", fetchCompare);
    $q.addEventListener("input", () => { updateJsonLink(); updateExternalLinks(); });
    $country.addEventListener("change", () => { updateJsonLink(); });

    // Estado inicial
    updateJsonLink();
    updateExternalLinks();

    // Soporta disparo con Enter
    $q.addEventListener("keydown", (ev) => {
      if (ev.key === "Enter") {
        ev.preventDefault();
        fetchCompare();
      }
    });
  </script>
</Base>
